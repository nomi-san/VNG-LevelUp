/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./renderer/src/routes/__root"
import { Route as ShopImport } from "./renderer/src/routes/shop"
import { Route as PiiDeclareImport } from "./renderer/src/routes/pii-declare"
import { Route as LoginImport } from "./renderer/src/routes/login"
import { Route as AccountImport } from "./renderer/src/routes/account"
import { Route as IndexImport } from "./renderer/src/routes/index"
import { Route as WebgameGameClientIdImport } from "./renderer/src/routes/webgame.$gameClientId"
import { Route as GamesGameClientIdImport } from "./renderer/src/routes/games/$gameClientId"

// Create/Update Routes

const ShopRoute = ShopImport.update({
  path: "/shop",
  getParentRoute: () => rootRoute,
} as any)

const PiiDeclareRoute = PiiDeclareImport.update({
  path: "/pii-declare",
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: "/login",
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  path: "/account",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const WebgameGameClientIdRoute = WebgameGameClientIdImport.update({
  path: "/webgame/$gameClientId",
  getParentRoute: () => rootRoute,
} as any)

const GamesGameClientIdRoute = GamesGameClientIdImport.update({
  path: "/games/$gameClientId",
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/account": {
      id: "/account"
      path: "/account"
      fullPath: "/account"
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    "/login": {
      id: "/login"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    "/pii-declare": {
      id: "/pii-declare"
      path: "/pii-declare"
      fullPath: "/pii-declare"
      preLoaderRoute: typeof PiiDeclareImport
      parentRoute: typeof rootRoute
    }
    "/shop": {
      id: "/shop"
      path: "/shop"
      fullPath: "/shop"
      preLoaderRoute: typeof ShopImport
      parentRoute: typeof rootRoute
    }
    "/games/$gameClientId": {
      id: "/games/$gameClientId"
      path: "/games/$gameClientId"
      fullPath: "/games/$gameClientId"
      preLoaderRoute: typeof GamesGameClientIdImport
      parentRoute: typeof rootRoute
    }
    "/webgame/$gameClientId": {
      id: "/webgame/$gameClientId"
      path: "/webgame/$gameClientId"
      fullPath: "/webgame/$gameClientId"
      preLoaderRoute: typeof WebgameGameClientIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AccountRoute,
  LoginRoute,
  PiiDeclareRoute,
  ShopRoute,
  GamesGameClientIdRoute,
  WebgameGameClientIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/account",
        "/login",
        "/pii-declare",
        "/shop",
        "/games/$gameClientId",
        "/webgame/$gameClientId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/account": {
      "filePath": "account.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/pii-declare": {
      "filePath": "pii-declare.tsx"
    },
    "/shop": {
      "filePath": "shop.tsx"
    },
    "/games/$gameClientId": {
      "filePath": "games/$gameClientId.tsx"
    },
    "/webgame/$gameClientId": {
      "filePath": "webgame.$gameClientId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
